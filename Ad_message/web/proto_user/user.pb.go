// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.25.2
// source: user.proto

package proto_user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User_Revise_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`  //状态标识符
	Mailbox string `protobuf:"bytes,2,opt,name=mailbox,proto3" json:"mailbox,omitempty"` //邮箱
	Grade   string `protobuf:"bytes,3,opt,name=grade,proto3" json:"grade,omitempty"`     //年级
}

func (x *User_Revise_Status) Reset() {
	*x = User_Revise_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Revise_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Revise_Status) ProtoMessage() {}

func (x *User_Revise_Status) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Revise_Status.ProtoReflect.Descriptor instead.
func (*User_Revise_Status) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *User_Revise_Status) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *User_Revise_Status) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

func (x *User_Revise_Status) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

type Blacklist_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`    //状态标识符
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`         //唯一标识符
	Mailbox  string `protobuf:"bytes,3,opt,name=mailbox,proto3" json:"mailbox,omitempty"`   //邮箱
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"` //密码
}

func (x *Blacklist_User) Reset() {
	*x = Blacklist_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blacklist_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blacklist_User) ProtoMessage() {}

func (x *Blacklist_User) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blacklist_User.ProtoReflect.Descriptor instead.
func (*Blacklist_User) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *Blacklist_User) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Blacklist_User) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Blacklist_User) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

func (x *Blacklist_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type MemberPaging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P       int64  `protobuf:"varint,1,opt,name=p,proto3" json:"p,omitempty"`            //页数
	Pn      int64  `protobuf:"varint,2,opt,name=pn,proto3" json:"pn,omitempty"`          //一页有多少数据
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` //具体分页数据是谁
}

func (x *MemberPaging) Reset() {
	*x = MemberPaging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberPaging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPaging) ProtoMessage() {}

func (x *MemberPaging) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberPaging.ProtoReflect.Descriptor instead.
func (*MemberPaging) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *MemberPaging) GetP() int64 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *MemberPaging) GetPn() int64 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *MemberPaging) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Mailbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mailbox string `protobuf:"bytes,1,opt,name=mailbox,proto3" json:"mailbox,omitempty"` //邮箱
}

func (x *Mailbox) Reset() {
	*x = Mailbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mailbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mailbox) ProtoMessage() {}

func (x *Mailbox) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mailbox.ProtoReflect.Descriptor instead.
func (*Mailbox) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *Mailbox) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

type Mailbox_Back struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`  //状态标识符
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`       //唯一标识符
	Mailbox string `protobuf:"bytes,3,opt,name=mailbox,proto3" json:"mailbox,omitempty"` //邮箱
}

func (x *Mailbox_Back) Reset() {
	*x = Mailbox_Back{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mailbox_Back) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mailbox_Back) ProtoMessage() {}

func (x *Mailbox_Back) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mailbox_Back.ProtoReflect.Descriptor instead.
func (*Mailbox_Back) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *Mailbox_Back) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Mailbox_Back) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Mailbox_Back) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

type BACK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Back bool `protobuf:"varint,1,opt,name=back,proto3" json:"back,omitempty"`
}

func (x *BACK) Reset() {
	*x = BACK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BACK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BACK) ProtoMessage() {}

func (x *BACK) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BACK.ProtoReflect.Descriptor instead.
func (*BACK) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *BACK) GetBack() bool {
	if x != nil {
		return x.Back
	}
	return false
}

type Redis_Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Who   string `protobuf:"bytes,3,opt,name=who,proto3" json:"who,omitempty"`    //哪个redis数据库
	Time  int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"` //0表示永久有效
}

func (x *Redis_Storage) Reset() {
	*x = Redis_Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redis_Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redis_Storage) ProtoMessage() {}

func (x *Redis_Storage) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redis_Storage.ProtoReflect.Descriptor instead.
func (*Redis_Storage) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *Redis_Storage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Redis_Storage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Redis_Storage) GetWho() string {
	if x != nil {
		return x.Who
	}
	return ""
}

func (x *Redis_Storage) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type User_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                           //状态  1表示正常用户 2表示注销过的用户 3表示未通过审核  4表示改用户不允许注册已经被拉黑
	Uuid       string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`                                //唯一标识符
	Mailbox    string `protobuf:"bytes,3,opt,name=mailbox,proto3" json:"mailbox,omitempty"`                          //邮箱
	Password   string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                        //密码
	Username   string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`                        //用户名
	Name       string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                                //姓名
	Sex        string `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex,omitempty"`                                  //性别
	Address    string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`                          //地址
	Grade      string `protobuf:"bytes,9,opt,name=grade,proto3" json:"grade,omitempty"`                              //年级
	Direction  string `protobuf:"bytes,10,opt,name=direction,proto3" json:"direction,omitempty"`                     //方向
	Qq         string `protobuf:"bytes,11,opt,name=qq,proto3" json:"qq,omitempty"`                                   //qq
	Wechat     string `protobuf:"bytes,12,opt,name=wechat,proto3" json:"wechat,omitempty"`                           //微信
	Position   string `protobuf:"bytes,13,opt,name=position,proto3" json:"position,omitempty"`                       //职位
	Motto      string `protobuf:"bytes,14,opt,name=motto,proto3" json:"motto,omitempty"`                             //座右铭
	CreatTime  string `protobuf:"bytes,15,opt,name=creat_time,json=creatTime,proto3" json:"creat_time,omitempty"`    //创建时间
	DeleteTime string `protobuf:"bytes,16,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"` //注销时间
}

func (x *User_Message) Reset() {
	*x = User_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Message) ProtoMessage() {}

func (x *User_Message) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Message.ProtoReflect.Descriptor instead.
func (*User_Message) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *User_Message) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *User_Message) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *User_Message) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

func (x *User_Message) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User_Message) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User_Message) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User_Message) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *User_Message) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User_Message) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *User_Message) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *User_Message) GetQq() string {
	if x != nil {
		return x.Qq
	}
	return ""
}

func (x *User_Message) GetWechat() string {
	if x != nil {
		return x.Wechat
	}
	return ""
}

func (x *User_Message) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *User_Message) GetMotto() string {
	if x != nil {
		return x.Motto
	}
	return ""
}

func (x *User_Message) GetCreatTime() string {
	if x != nil {
		return x.CreatTime
	}
	return ""
}

func (x *User_Message) GetDeleteTime() string {
	if x != nil {
		return x.DeleteTime
	}
	return ""
}

type User_Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMessage map[string]string `protobuf:"bytes,1,rep,name=user_message,json=userMessage,proto3" json:"user_message,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *User_Change) Reset() {
	*x = User_Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Change) ProtoMessage() {}

func (x *User_Change) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Change.ProtoReflect.Descriptor instead.
func (*User_Change) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *User_Change) GetUserMessage() map[string]string {
	if x != nil {
		return x.UserMessage
	}
	return nil
}

type User_Password struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`         //uuid
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //密码
}

func (x *User_Password) Reset() {
	*x = User_Password{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Password) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Password) ProtoMessage() {}

func (x *User_Password) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Password.ProtoReflect.Descriptor instead.
func (*User_Password) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *User_Password) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *User_Password) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5c, 0x0a, 0x12, 0x55, 0x73, 0x65,
	0x72, 0x5f, 0x52, 0x65, 0x76, 0x69, 0x73, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62,
	0x6f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x22, 0x72, 0x0a, 0x0e, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x46, 0x0a, 0x0c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x07, 0x4d, 0x61, 0x69, 0x6c,
	0x62, 0x6f, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x22, 0x54, 0x0a,
	0x0c, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x69,
	0x6c, 0x62, 0x6f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c,
	0x62, 0x6f, 0x78, 0x22, 0x1a, 0x0a, 0x04, 0x42, 0x41, 0x43, 0x4b, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x61, 0x63, 0x6b, 0x22,
	0x5d, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x68, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x68, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x9a,
	0x03, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x71,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x74, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x3e, 0x0a,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a,
	0x0d, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0xb0,
	0x09, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x5f, 0x42, 0x61, 0x63,
	0x6b, 0x12, 0x08, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x1a, 0x0d, 0x2e, 0x4d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x78, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x33, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x5f, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a,
	0x0e, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x2b, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x5f, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x05, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x12, 0x28, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x05, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x12, 0x2d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x05,
	0x2e, 0x42, 0x41, 0x43, 0x4b, 0x12, 0x31, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x5f, 0x4d, 0x65, 0x73, 0x61, 0x61, 0x67, 0x65, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x12,
	0x08, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x1a, 0x0d, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x0c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x1a, 0x05, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x12, 0x26, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x08,
	0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x1a, 0x08, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62,
	0x6f, 0x78, 0x12, 0x33, 0x0a, 0x1a, 0x52, 0x65, 0x76, 0x69, 0x73, 0x65, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c,
	0x12, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x1a, 0x05, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x12, 0x30, 0x0a, 0x18, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4d, 0x79,
	0x73, 0x71, 0x6c, 0x12, 0x0d, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x5f, 0x42, 0x61,
	0x63, 0x6b, 0x1a, 0x05, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x12, 0x31, 0x0a, 0x19, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78,
	0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x0d, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78,
	0x5f, 0x42, 0x61, 0x63, 0x6b, 0x1a, 0x05, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x12, 0x2d, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x08, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f,
	0x78, 0x1a, 0x08, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x27, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x4d, 0x61, 0x69, 0x6c,
	0x62, 0x6f, 0x78, 0x12, 0x08, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x1a, 0x05, 0x2e,
	0x42, 0x41, 0x43, 0x4b, 0x12, 0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x41, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x69, 0x73, 0x65, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x5f,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x12, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f,
	0x55, 0x73, 0x65, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x2e, 0x4d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x78, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x0f, 0x53, 0x65, 0x65, 0x6b, 0x5f, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29,
	0x0a, 0x0e, 0x53, 0x65, 0x65, 0x6b, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0d, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x1a,
	0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x08, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x08, 0x2e,
	0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x3d, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x5f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41,
	0x0a, 0x16, 0x41, 0x64, 0x64, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_user_proto_goTypes = []interface{}{
	(*User_Revise_Status)(nil), // 0: User_Revise_Status
	(*Blacklist_User)(nil),     // 1: Blacklist_User
	(*MemberPaging)(nil),       // 2: MemberPaging
	(*Message)(nil),            // 3: Message
	(*Mailbox)(nil),            // 4: Mailbox
	(*Mailbox_Back)(nil),       // 5: Mailbox_Back
	(*BACK)(nil),               // 6: BACK
	(*Redis_Storage)(nil),      // 7: Redis_Storage
	(*User_Message)(nil),       // 8: User_Message
	(*User_Change)(nil),        // 9: User_Change
	(*User_Password)(nil),      // 10: User_Password
	nil,                        // 11: User_Change.UserMessageEntry
	(*emptypb.Empty)(nil),      // 12: google.protobuf.Empty
}
var file_user_proto_depIdxs = []int32{
	11, // 0: User_Change.user_message:type_name -> User_Change.UserMessageEntry
	4,  // 1: Users.Register_Mailbox_Back:input_type -> Mailbox
	7,  // 2: Users.Get_Redis_Storage:input_type -> Redis_Storage
	7,  // 3: Users.Save_Redis_Storage:input_type -> Redis_Storage
	8,  // 4: Users.Add_User_Message:input_type -> User_Message
	7,  // 5: Users.Delete_Redis_Storage:input_type -> Redis_Storage
	4,  // 6: Users.Get_User_Mesaage_Mysql:input_type -> Mailbox
	9,  // 7: Users.Revise_User_Message_Mysql:input_type -> User_Change
	4,  // 8: Users.Get_User_Mailbox:input_type -> Mailbox
	10, // 9: Users.Revise_User_Password_Mysql:input_type -> User_Password
	5,  // 10: Users.Revise_User_Status_Mysql:input_type -> Mailbox_Back
	5,  // 11: Users.Revise_User_Mailbox_Mysql:input_type -> Mailbox_Back
	4,  // 12: Users.Get_User_Password_Mysql:input_type -> Mailbox
	4,  // 13: Users.Delete_Mysql_Mailbox:input_type -> Mailbox
	2,  // 14: Users.Get_Register_User:input_type -> MemberPaging
	0,  // 15: Users.Revise_User_Status:input_type -> User_Revise_Status
	4,  // 16: Users.Refuse_User_Status:input_type -> Mailbox
	2,  // 17: Users.Get_User:input_type -> MemberPaging
	2,  // 18: Users.Seek_Grade_User:input_type -> MemberPaging
	2,  // 19: Users.Seek_Name_User:input_type -> MemberPaging
	2,  // 20: Users.Get_Cancel_User:input_type -> MemberPaging
	2,  // 21: Users.Get_Blacklist_User:input_type -> MemberPaging
	4,  // 22: Users.Delete_Blacklist_User:input_type -> Mailbox
	1,  // 23: Users.Add_Blacklist_User:input_type -> Blacklist_User
	1,  // 24: Users.Add_Register_Blacklist:input_type -> Blacklist_User
	5,  // 25: Users.Register_Mailbox_Back:output_type -> Mailbox_Back
	7,  // 26: Users.Get_Redis_Storage:output_type -> Redis_Storage
	6,  // 27: Users.Save_Redis_Storage:output_type -> BACK
	6,  // 28: Users.Add_User_Message:output_type -> BACK
	6,  // 29: Users.Delete_Redis_Storage:output_type -> BACK
	8,  // 30: Users.Get_User_Mesaage_Mysql:output_type -> User_Message
	6,  // 31: Users.Revise_User_Message_Mysql:output_type -> BACK
	4,  // 32: Users.Get_User_Mailbox:output_type -> Mailbox
	6,  // 33: Users.Revise_User_Password_Mysql:output_type -> BACK
	6,  // 34: Users.Revise_User_Status_Mysql:output_type -> BACK
	6,  // 35: Users.Revise_User_Mailbox_Mysql:output_type -> BACK
	4,  // 36: Users.Get_User_Password_Mysql:output_type -> Mailbox
	6,  // 37: Users.Delete_Mysql_Mailbox:output_type -> BACK
	3,  // 38: Users.Get_Register_User:output_type -> Message
	12, // 39: Users.Revise_User_Status:output_type -> google.protobuf.Empty
	12, // 40: Users.Refuse_User_Status:output_type -> google.protobuf.Empty
	3,  // 41: Users.Get_User:output_type -> Message
	3,  // 42: Users.Seek_Grade_User:output_type -> Message
	3,  // 43: Users.Seek_Name_User:output_type -> Message
	3,  // 44: Users.Get_Cancel_User:output_type -> Message
	3,  // 45: Users.Get_Blacklist_User:output_type -> Message
	12, // 46: Users.Delete_Blacklist_User:output_type -> google.protobuf.Empty
	12, // 47: Users.Add_Blacklist_User:output_type -> google.protobuf.Empty
	12, // 48: Users.Add_Register_Blacklist:output_type -> google.protobuf.Empty
	25, // [25:49] is the sub-list for method output_type
	1,  // [1:25] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Revise_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blacklist_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberPaging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mailbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mailbox_Back); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BACK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Redis_Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Password); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
