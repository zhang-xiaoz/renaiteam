// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.25.2
// source: blog.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Blog_Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P       int64  `protobuf:"varint,1,opt,name=p,proto3" json:"p,omitempty"`            //页数
	Pn      int64  `protobuf:"varint,2,opt,name=pn,proto3" json:"pn,omitempty"`          //一页有多少数据
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` //具体分页数据是谁
}

func (x *Blog_Page) Reset() {
	*x = Blog_Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blog_Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blog_Page) ProtoMessage() {}

func (x *Blog_Page) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blog_Page.ProtoReflect.Descriptor instead.
func (*Blog_Page) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{0}
}

func (x *Blog_Page) GetP() int64 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *Blog_Page) GetPn() int64 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *Blog_Page) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Blog_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Blog_Message) Reset() {
	*x = Blog_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blog_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blog_Message) ProtoMessage() {}

func (x *Blog_Message) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blog_Message.ProtoReflect.Descriptor instead.
func (*Blog_Message) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{1}
}

func (x *Blog_Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{2}
}

func (x *Status) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type Blog_Elastic_Message_CollectionBlogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number   int64                           `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"` //数量
	Previous int64                           `protobuf:"varint,2,opt,name=previous,proto3" json:"previous,omitempty"`
	Data     []*Blog_Elastic_Message_TopBlog `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Blog_Elastic_Message_CollectionBlogs) Reset() {
	*x = Blog_Elastic_Message_CollectionBlogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blog_Elastic_Message_CollectionBlogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blog_Elastic_Message_CollectionBlogs) ProtoMessage() {}

func (x *Blog_Elastic_Message_CollectionBlogs) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blog_Elastic_Message_CollectionBlogs.ProtoReflect.Descriptor instead.
func (*Blog_Elastic_Message_CollectionBlogs) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{3}
}

func (x *Blog_Elastic_Message_CollectionBlogs) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Blog_Elastic_Message_CollectionBlogs) GetPrevious() int64 {
	if x != nil {
		return x.Previous
	}
	return 0
}

func (x *Blog_Elastic_Message_CollectionBlogs) GetData() []*Blog_Elastic_Message_TopBlog {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserUuid_Blog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"` //文章唯一标识符
	Time     int64  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`        //时间
}

func (x *UserUuid_Blog) Reset() {
	*x = UserUuid_Blog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUuid_Blog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUuid_Blog) ProtoMessage() {}

func (x *UserUuid_Blog) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUuid_Blog.ProtoReflect.Descriptor instead.
func (*UserUuid_Blog) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{4}
}

func (x *UserUuid_Blog) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *UserUuid_Blog) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type Redis_Storage_Blog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Who   string `protobuf:"bytes,3,opt,name=who,proto3" json:"who,omitempty"` //哪个redis数据库
}

func (x *Redis_Storage_Blog) Reset() {
	*x = Redis_Storage_Blog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redis_Storage_Blog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redis_Storage_Blog) ProtoMessage() {}

func (x *Redis_Storage_Blog) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redis_Storage_Blog.ProtoReflect.Descriptor instead.
func (*Redis_Storage_Blog) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{5}
}

func (x *Redis_Storage_Blog) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Redis_Storage_Blog) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Redis_Storage_Blog) GetWho() string {
	if x != nil {
		return x.Who
	}
	return ""
}

type AAAA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A1 string `protobuf:"bytes,1,opt,name=A1,proto3" json:"A1,omitempty"`  //用户uuid
	A2 string `protobuf:"bytes,2,opt,name=A2,proto3" json:"A2,omitempty"`  //搜索信息 按照状态
	A3 string `protobuf:"bytes,3,opt,name=A3,proto3" json:"A3,omitempty"`  //上一个搜索的uuid
	A4 int64  `protobuf:"varint,4,opt,name=A4,proto3" json:"A4,omitempty"` //上一个搜索的时间
	A5 int64  `protobuf:"varint,5,opt,name=A5,proto3" json:"A5,omitempty"` //是第一次还是第二次搜索//0是1，1是多次
}

func (x *AAAA) Reset() {
	*x = AAAA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AAAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AAAA) ProtoMessage() {}

func (x *AAAA) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AAAA.ProtoReflect.Descriptor instead.
func (*AAAA) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{6}
}

func (x *AAAA) GetA1() string {
	if x != nil {
		return x.A1
	}
	return ""
}

func (x *AAAA) GetA2() string {
	if x != nil {
		return x.A2
	}
	return ""
}

func (x *AAAA) GetA3() string {
	if x != nil {
		return x.A3
	}
	return ""
}

func (x *AAAA) GetA4() int64 {
	if x != nil {
		return x.A4
	}
	return 0
}

func (x *AAAA) GetA5() int64 {
	if x != nil {
		return x.A5
	}
	return 0
}

type AAAAA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A string `protobuf:"bytes,1,opt,name=A,proto3" json:"A,omitempty"`  //搜索信息
	B string `protobuf:"bytes,2,opt,name=B,proto3" json:"B,omitempty"`  //上一个搜索的uuid
	C int64  `protobuf:"varint,3,opt,name=C,proto3" json:"C,omitempty"` //阅读量//时间
	D int64  `protobuf:"varint,4,opt,name=D,proto3" json:"D,omitempty"` //第几次操作
}

func (x *AAAAA) Reset() {
	*x = AAAAA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AAAAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AAAAA) ProtoMessage() {}

func (x *AAAAA) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AAAAA.ProtoReflect.Descriptor instead.
func (*AAAAA) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{7}
}

func (x *AAAAA) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

func (x *AAAAA) GetB() string {
	if x != nil {
		return x.B
	}
	return ""
}

func (x *AAAAA) GetC() int64 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *AAAAA) GetD() int64 {
	if x != nil {
		return x.D
	}
	return 0
}

type Redis_Back_Picture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Redis_Back_Picture) Reset() {
	*x = Redis_Back_Picture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redis_Back_Picture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redis_Back_Picture) ProtoMessage() {}

func (x *Redis_Back_Picture) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redis_Back_Picture.ProtoReflect.Descriptor instead.
func (*Redis_Back_Picture) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{8}
}

func (x *Redis_Back_Picture) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type BlogBlog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUuid   string `protobuf:"bytes,1,opt,name=articleUuid,proto3" json:"articleUuid,omitempty"`       //文章唯一标识符
	UserUuid      string `protobuf:"bytes,2,opt,name=userUuid,proto3" json:"userUuid,omitempty"`             //用户唯一标识符
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                   //标题
	Content       string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`               //内容
	Label         string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`                   //标签
	Cover         string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`                   //封面
	Abstract      string `protobuf:"bytes,7,opt,name=abstract,proto3" json:"abstract,omitempty"`             //摘要
	Visibility    string `protobuf:"bytes,8,opt,name=visibility,proto3" json:"visibility,omitempty"`         //可见范围
	ArticleType   string `protobuf:"bytes,9,opt,name=articleType,proto3" json:"articleType,omitempty"`       //文章类型
	Process       string `protobuf:"bytes,10,opt,name=process,proto3" json:"process,omitempty"`              //是否过审
	Readingvolume int64  `protobuf:"varint,11,opt,name=readingvolume,proto3" json:"readingvolume,omitempty"` //阅读量
	CreatTime     string `protobuf:"bytes,12,opt,name=creatTime,proto3" json:"creatTime,omitempty"`          //创建时间
}

func (x *BlogBlog) Reset() {
	*x = BlogBlog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogBlog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogBlog) ProtoMessage() {}

func (x *BlogBlog) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogBlog.ProtoReflect.Descriptor instead.
func (*BlogBlog) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{9}
}

func (x *BlogBlog) GetArticleUuid() string {
	if x != nil {
		return x.ArticleUuid
	}
	return ""
}

func (x *BlogBlog) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *BlogBlog) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BlogBlog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *BlogBlog) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *BlogBlog) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *BlogBlog) GetAbstract() string {
	if x != nil {
		return x.Abstract
	}
	return ""
}

func (x *BlogBlog) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *BlogBlog) GetArticleType() string {
	if x != nil {
		return x.ArticleType
	}
	return ""
}

func (x *BlogBlog) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *BlogBlog) GetReadingvolume() int64 {
	if x != nil {
		return x.Readingvolume
	}
	return 0
}

func (x *BlogBlog) GetCreatTime() string {
	if x != nil {
		return x.CreatTime
	}
	return ""
}

type BlogProcessBlog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUuid string `protobuf:"bytes,1,opt,name=articleUuid,proto3" json:"articleUuid,omitempty"` //文章唯一标识符
	Process     string `protobuf:"bytes,2,opt,name=process,proto3" json:"process,omitempty"`         //状态标识符
	UserUuid    string `protobuf:"bytes,3,opt,name=userUuid,proto3" json:"userUuid,omitempty"`       //用户唯一标识符
}

func (x *BlogProcessBlog) Reset() {
	*x = BlogProcessBlog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogProcessBlog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogProcessBlog) ProtoMessage() {}

func (x *BlogProcessBlog) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogProcessBlog.ProtoReflect.Descriptor instead.
func (*BlogProcessBlog) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{10}
}

func (x *BlogProcessBlog) GetArticleUuid() string {
	if x != nil {
		return x.ArticleUuid
	}
	return ""
}

func (x *BlogProcessBlog) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *BlogProcessBlog) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

type BlogProcessPlusBlog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUuid string `protobuf:"bytes,1,opt,name=articleUuid,proto3" json:"articleUuid,omitempty"` //文章唯一标识符
	Process     string `protobuf:"bytes,2,opt,name=process,proto3" json:"process,omitempty"`         //状态标识符
	UserUuid    string `protobuf:"bytes,3,opt,name=userUuid,proto3" json:"userUuid,omitempty"`       //用户唯一标识符
	Code        int64  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`              //携带信息的状态码
	Message     string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`         //携带的信息
}

func (x *BlogProcessPlusBlog) Reset() {
	*x = BlogProcessPlusBlog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogProcessPlusBlog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogProcessPlusBlog) ProtoMessage() {}

func (x *BlogProcessPlusBlog) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogProcessPlusBlog.ProtoReflect.Descriptor instead.
func (*BlogProcessPlusBlog) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{11}
}

func (x *BlogProcessPlusBlog) GetArticleUuid() string {
	if x != nil {
		return x.ArticleUuid
	}
	return ""
}

func (x *BlogProcessPlusBlog) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *BlogProcessPlusBlog) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *BlogProcessPlusBlog) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BlogProcessPlusBlog) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BACKBlog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Back bool `protobuf:"varint,1,opt,name=back,proto3" json:"back,omitempty"`
}

func (x *BACKBlog) Reset() {
	*x = BACKBlog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BACKBlog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BACKBlog) ProtoMessage() {}

func (x *BACKBlog) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BACKBlog.ProtoReflect.Descriptor instead.
func (*BACKBlog) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{12}
}

func (x *BACKBlog) GetBack() bool {
	if x != nil {
		return x.Back
	}
	return false
}

type Blog_ArticleUuid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUuid string `protobuf:"bytes,1,opt,name=articleUuid,proto3" json:"articleUuid,omitempty"` //文章唯一标识符
}

func (x *Blog_ArticleUuid) Reset() {
	*x = Blog_ArticleUuid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blog_ArticleUuid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blog_ArticleUuid) ProtoMessage() {}

func (x *Blog_ArticleUuid) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blog_ArticleUuid.ProtoReflect.Descriptor instead.
func (*Blog_ArticleUuid) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{13}
}

func (x *Blog_ArticleUuid) GetArticleUuid() string {
	if x != nil {
		return x.ArticleUuid
	}
	return ""
}

type Blog_UserUuid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"` //用户唯一标识符
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`     //文章状态
}

func (x *Blog_UserUuid) Reset() {
	*x = Blog_UserUuid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blog_UserUuid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blog_UserUuid) ProtoMessage() {}

func (x *Blog_UserUuid) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blog_UserUuid.ProtoReflect.Descriptor instead.
func (*Blog_UserUuid) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{14}
}

func (x *Blog_UserUuid) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *Blog_UserUuid) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type BlogloadingBlog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C string `protobuf:"bytes,1,opt,name=c,proto3" json:"c,omitempty"`  //c++/c
	A string `protobuf:"bytes,2,opt,name=a,proto3" json:"a,omitempty"`  //ai
	B int64  `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"` //时间
}

func (x *BlogloadingBlog) Reset() {
	*x = BlogloadingBlog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogloadingBlog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogloadingBlog) ProtoMessage() {}

func (x *BlogloadingBlog) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogloadingBlog.ProtoReflect.Descriptor instead.
func (*BlogloadingBlog) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{15}
}

func (x *BlogloadingBlog) GetC() string {
	if x != nil {
		return x.C
	}
	return ""
}

func (x *BlogloadingBlog) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

func (x *BlogloadingBlog) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

type Blog_Elastic_Message_TopBlogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int64                           `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"` //时间
	Data   []*Blog_Elastic_Message_TopBlog `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Blog_Elastic_Message_TopBlogs) Reset() {
	*x = Blog_Elastic_Message_TopBlogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blog_Elastic_Message_TopBlogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blog_Elastic_Message_TopBlogs) ProtoMessage() {}

func (x *Blog_Elastic_Message_TopBlogs) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blog_Elastic_Message_TopBlogs.ProtoReflect.Descriptor instead.
func (*Blog_Elastic_Message_TopBlogs) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{16}
}

func (x *Blog_Elastic_Message_TopBlogs) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Blog_Elastic_Message_TopBlogs) GetData() []*Blog_Elastic_Message_TopBlog {
	if x != nil {
		return x.Data
	}
	return nil
}

type Blog_Elastic_Message_SerachBlogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number   int64                           `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`    //数量
	Previous string                          `protobuf:"bytes,2,opt,name=previous,proto3" json:"previous,omitempty"` //json化
	Data     []*Blog_Elastic_Message_TopBlog `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Blog_Elastic_Message_SerachBlogs) Reset() {
	*x = Blog_Elastic_Message_SerachBlogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blog_Elastic_Message_SerachBlogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blog_Elastic_Message_SerachBlogs) ProtoMessage() {}

func (x *Blog_Elastic_Message_SerachBlogs) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blog_Elastic_Message_SerachBlogs.ProtoReflect.Descriptor instead.
func (*Blog_Elastic_Message_SerachBlogs) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{17}
}

func (x *Blog_Elastic_Message_SerachBlogs) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Blog_Elastic_Message_SerachBlogs) GetPrevious() string {
	if x != nil {
		return x.Previous
	}
	return ""
}

func (x *Blog_Elastic_Message_SerachBlogs) GetData() []*Blog_Elastic_Message_TopBlog {
	if x != nil {
		return x.Data
	}
	return nil
}

type Blog_Elastic_Message_TopBlog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleUuid string `protobuf:"bytes,1,opt,name=articleUuid,proto3" json:"articleUuid,omitempty"` //文章唯一标识符
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`             //标题
	Cover       string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`             //封面
	Abstract    string `protobuf:"bytes,4,opt,name=abstract,proto3" json:"abstract,omitempty"`       //摘要
	Visibility  string `protobuf:"bytes,5,opt,name=visibility,proto3" json:"visibility,omitempty"`   //可见范围
}

func (x *Blog_Elastic_Message_TopBlog) Reset() {
	*x = Blog_Elastic_Message_TopBlog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blog_Elastic_Message_TopBlog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blog_Elastic_Message_TopBlog) ProtoMessage() {}

func (x *Blog_Elastic_Message_TopBlog) ProtoReflect() protoreflect.Message {
	mi := &file_blog_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blog_Elastic_Message_TopBlog.ProtoReflect.Descriptor instead.
func (*Blog_Elastic_Message_TopBlog) Descriptor() ([]byte, []int) {
	return file_blog_proto_rawDescGZIP(), []int{18}
}

func (x *Blog_Elastic_Message_TopBlog) GetArticleUuid() string {
	if x != nil {
		return x.ArticleUuid
	}
	return ""
}

func (x *Blog_Elastic_Message_TopBlog) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Blog_Elastic_Message_TopBlog) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Blog_Elastic_Message_TopBlog) GetAbstract() string {
	if x != nil {
		return x.Abstract
	}
	return ""
}

func (x *Blog_Elastic_Message_TopBlog) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

var File_blog_proto protoreflect.FileDescriptor

var file_blog_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x09, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x50, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x70, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28,
	0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x20, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x25, 0x42,
	0x6c, 0x6f, 0x67, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62,
	0x6c, 0x6f, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x45, 0x6c,
	0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x54, 0x6f,
	0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a,
	0x12, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x42,
	0x6c, 0x6f, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77,
	0x68, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x68, 0x6f, 0x22, 0x56, 0x0a,
	0x04, 0x41, 0x41, 0x41, 0x41, 0x12, 0x0e, 0x0a, 0x02, 0x41, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x41, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x41, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x41, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x41, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x41, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x41, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x41, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x41, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x41, 0x35, 0x22, 0x3f, 0x0a, 0x05, 0x41, 0x41, 0x41, 0x41, 0x41, 0x12, 0x0c,
	0x0a, 0x01, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x41, 0x12, 0x0c, 0x0a, 0x01,
	0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x42, 0x12, 0x0c, 0x0a, 0x01, 0x43, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x43, 0x12, 0x0c, 0x0a, 0x01, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x01, 0x44, 0x22, 0x28, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f,
	0x42, 0x61, 0x63, 0x6b, 0x5f, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x22, 0xe1, 0x02, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x22, 0x9c, 0x01, 0x0a, 0x14, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6c, 0x75, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x1f, 0x0a, 0x09, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x61, 0x63, 0x6b,
	0x22, 0x34, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x10, 0x42,
	0x6c, 0x6f, 0x67, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12,
	0x0c, 0x0a, 0x01, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x63, 0x12, 0x0c, 0x0a,
	0x01, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x62, 0x22, 0x6c, 0x0a, 0x1e, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x54, 0x6f, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x54, 0x6f, 0x70, 0x5f, 0x62, 0x6c, 0x6f,
	0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x21, 0x42, 0x6c, 0x6f, 0x67,
	0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x53, 0x65, 0x72, 0x61, 0x63, 0x68, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x54, 0x6f, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x45,
	0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x54,
	0x6f, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x32, 0xf9, 0x0c, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x1b, 0x41,
	0x64, 0x64, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x0a, 0x2e, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x12, 0x3f, 0x0a, 0x1e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x65, 0x5f, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x5f,
	0x62, 0x6c, 0x6f, 0x67, 0x12, 0x11, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62,
	0x6c, 0x6f, 0x67, 0x12, 0x3b, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x55, 0x75, 0x69, 0x64, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x62, 0x6c, 0x6f,
	0x67, 0x12, 0x11, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x62, 0x6c, 0x6f, 0x67, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c, 0x6f, 0x67,
	0x12, 0x4e, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x54, 0x6f, 0x70,
	0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e,
	0x42, 0x6c, 0x6f, 0x67, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x67,
	0x12, 0x3d, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x55,
	0x75, 0x69, 0x64, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x42, 0x6c, 0x6f, 0x67,
	0x12, 0x11, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62,
	0x6c, 0x6f, 0x67, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12,
	0x51, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x11, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x1a, 0x1e, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x54, 0x6f, 0x70, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x12, 0x54, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x6c, 0x6f, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x1a, 0x1f, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x45,
	0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x54,
	0x6f, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x5f,
	0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x11, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x12, 0x37, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d,
	0x79, 0x73, 0x71, 0x6c, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x11, 0x2e, 0x42,
	0x6c, 0x6f, 0x67, 0x5f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x1a,
	0x0a, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x46, 0x0a, 0x18, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x06, 0x2e, 0x41, 0x41, 0x41, 0x41, 0x41, 0x1a,
	0x22, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x61, 0x63, 0x68, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x73, 0x12, 0x43, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65, 0x5f, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x13,
	0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x42,
	0x6c, 0x6f, 0x67, 0x1a, 0x13, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x42, 0x61, 0x63, 0x6b,
	0x5f, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x45, 0x6c, 0x36, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x62, 0x6c, 0x6f,
	0x67, 0x12, 0x13, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x12, 0x3a, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x6c, 0x79,
	0x5f, 0x45, 0x6c, 0x36, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12,
	0x11, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x42,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x05, 0x2e, 0x41, 0x41, 0x41, 0x41, 0x1a, 0x22,
	0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x61, 0x63, 0x68, 0x5f, 0x62, 0x6c, 0x6f,
	0x67, 0x73, 0x12, 0x42, 0x0a, 0x1d, 0x52, 0x65, 0x76, 0x69, 0x73, 0x65, 0x5f, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x62,
	0x6c, 0x6f, 0x67, 0x12, 0x15, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43,
	0x4b, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x37, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x5f, 0x4d, 0x79,
	0x73, 0x71, 0x6c, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12,
	0x3a, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x5f,
	0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x1a,
	0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x53, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x1a, 0x26, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f,
	0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x73,
	0x12, 0x33, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x69, 0x73, 0x65, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f,
	0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x0a, 0x2e,
	0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b,
	0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x47, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x12, 0x06, 0x2e, 0x41, 0x41, 0x41, 0x41, 0x41, 0x1a, 0x22, 0x2e, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x53, 0x65, 0x72, 0x61, 0x63, 0x68, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x35,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x2e, 0x42,
	0x6c, 0x6f, 0x67, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x1a, 0x07, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x41, 0x6c, 0x6c, 0x12, 0x0a, 0x2e, 0x42,
	0x6c, 0x6f, 0x67, 0x5f, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x45, 0x6c, 0x36, 0x5f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x11, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x1a, 0x0a, 0x2e, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x12, 0x31, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0a, 0x2e, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0a,
	0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x42, 0x6c, 0x6f,
	0x67, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x5f, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x0a, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x0d,
	0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x5a,
	0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_blog_proto_rawDescOnce sync.Once
	file_blog_proto_rawDescData = file_blog_proto_rawDesc
)

func file_blog_proto_rawDescGZIP() []byte {
	file_blog_proto_rawDescOnce.Do(func() {
		file_blog_proto_rawDescData = protoimpl.X.CompressGZIP(file_blog_proto_rawDescData)
	})
	return file_blog_proto_rawDescData
}

var file_blog_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_blog_proto_goTypes = []interface{}{
	(*Blog_Page)(nil),    // 0: Blog_Page
	(*Blog_Message)(nil), // 1: Blog_Message
	(*Status)(nil),       // 2: Status
	(*Blog_Elastic_Message_CollectionBlogs)(nil), // 3: Blog_Elastic_Message_Collection_blogs
	(*UserUuid_Blog)(nil),                        // 4: UserUuid_Blog
	(*Redis_Storage_Blog)(nil),                   // 5: Redis_Storage_Blog
	(*AAAA)(nil),                                 // 6: AAAA
	(*AAAAA)(nil),                                // 7: AAAAA
	(*Redis_Back_Picture)(nil),                   // 8: Redis_Back_Picture
	(*BlogBlog)(nil),                             // 9: Blog_blog
	(*BlogProcessBlog)(nil),                      // 10: BlogProcess_blog
	(*BlogProcessPlusBlog)(nil),                  // 11: BlogProcessPlus_blog
	(*BACKBlog)(nil),                             // 12: BACK_blog
	(*Blog_ArticleUuid)(nil),                     // 13: Blog_ArticleUuid
	(*Blog_UserUuid)(nil),                        // 14: Blog_UserUuid
	(*BlogloadingBlog)(nil),                      // 15: Blogloading_blog
	(*Blog_Elastic_Message_TopBlogs)(nil),        // 16: Blog_Elastic_Message_Top_blogs
	(*Blog_Elastic_Message_SerachBlogs)(nil),     // 17: Blog_Elastic_Message_Serach_blogs
	(*Blog_Elastic_Message_TopBlog)(nil),         // 18: Blog_Elastic_Message_Top_blog
	(*emptypb.Empty)(nil),                        // 19: google.protobuf.Empty
}
var file_blog_proto_depIdxs = []int32{
	18, // 0: Blog_Elastic_Message_Collection_blogs.data:type_name -> Blog_Elastic_Message_Top_blog
	18, // 1: Blog_Elastic_Message_Top_blogs.data:type_name -> Blog_Elastic_Message_Top_blog
	18, // 2: Blog_Elastic_Message_Serach_blogs.data:type_name -> Blog_Elastic_Message_Top_blog
	9,  // 3: Blogs.Add_Blog_Message_Mysql_blog:input_type -> Blog_blog
	10, // 4: Blogs.Revise_Blog_Process_Mysql_blog:input_type -> BlogProcess_blog
	10, // 5: Blogs.Check_Blog_Uuid_Mysql_blog:input_type -> BlogProcess_blog
	19, // 6: Blogs.Get_Blog_Message_Elastic_Top_blog:input_type -> google.protobuf.Empty
	15, // 7: Blogs.Check_Blog_Uuid_Elastic_Blog:input_type -> Blogloading_blog
	13, // 8: Blogs.Get_Blog_Message_ArticleUuid:input_type -> Blog_ArticleUuid
	15, // 9: Blogs.Get_Blog_Message_Elastic_Lower:input_type -> Blogloading_blog
	13, // 10: Blogs.Add_Blog_Reading_Volume:input_type -> Blog_ArticleUuid
	13, // 11: Blogs.Get_Blog_Mysql_Message:input_type -> Blog_ArticleUuid
	7,  // 12: Blogs.Search_Blog_Elastic_blog:input_type -> AAAAA
	5,  // 13: Blogs.Save_Redis_Storage_blog:input_type -> Redis_Storage_Blog
	5,  // 14: Blogs.Delete_El6_Mysql_blog:input_type -> Redis_Storage_Blog
	13, // 15: Blogs.Completely_El6_Mysql_blog:input_type -> Blog_ArticleUuid
	6,  // 16: Blogs.Get_Delete_Blog_Mysql:input_type -> AAAA
	11, // 17: Blogs.Revise_Blog_Process_Plus_blog:input_type -> BlogProcessPlus_blog
	14, // 18: Blogs.Add_Mysql_Blog_Collection:input_type -> Blog_UserUuid
	14, // 19: Blogs.Delete_Mysql_Blog_Collection:input_type -> Blog_UserUuid
	4,  // 20: Blogs.Get_Mysql_Blog_Collection:input_type -> UserUuid_Blog
	9,  // 21: Blogs.Revise_Blog_Elastic_Mysql:input_type -> Blog_blog
	7,  // 22: Blogs.Search_Blog_Label_Elastic:input_type -> AAAAA
	14, // 23: Blogs.Get_Blog_Collection_Status:input_type -> Blog_UserUuid
	0,  // 24: Blogs.Get_Blog_Manage_All:input_type -> Blog_Page
	10, // 25: Blogs.Delete_El6_Mysql_Process:input_type -> BlogProcess_blog
	0,  // 26: Blogs.Get_Blog_Manage_Name:input_type -> Blog_Page
	0,  // 27: Blogs.Get_Blog_Manage_Title:input_type -> Blog_Page
	0,  // 28: Blogs.Get_Blog_Manage_Label:input_type -> Blog_Page
	12, // 29: Blogs.Add_Blog_Message_Mysql_blog:output_type -> BACK_blog
	12, // 30: Blogs.Revise_Blog_Process_Mysql_blog:output_type -> BACK_blog
	12, // 31: Blogs.Check_Blog_Uuid_Mysql_blog:output_type -> BACK_blog
	15, // 32: Blogs.Get_Blog_Message_Elastic_Top_blog:output_type -> Blogloading_blog
	12, // 33: Blogs.Check_Blog_Uuid_Elastic_Blog:output_type -> BACK_blog
	18, // 34: Blogs.Get_Blog_Message_ArticleUuid:output_type -> Blog_Elastic_Message_Top_blog
	16, // 35: Blogs.Get_Blog_Message_Elastic_Lower:output_type -> Blog_Elastic_Message_Top_blogs
	12, // 36: Blogs.Add_Blog_Reading_Volume:output_type -> BACK_blog
	9,  // 37: Blogs.Get_Blog_Mysql_Message:output_type -> Blog_blog
	17, // 38: Blogs.Search_Blog_Elastic_blog:output_type -> Blog_Elastic_Message_Serach_blogs
	8,  // 39: Blogs.Save_Redis_Storage_blog:output_type -> Redis_Back_Picture
	12, // 40: Blogs.Delete_El6_Mysql_blog:output_type -> BACK_blog
	12, // 41: Blogs.Completely_El6_Mysql_blog:output_type -> BACK_blog
	17, // 42: Blogs.Get_Delete_Blog_Mysql:output_type -> Blog_Elastic_Message_Serach_blogs
	12, // 43: Blogs.Revise_Blog_Process_Plus_blog:output_type -> BACK_blog
	12, // 44: Blogs.Add_Mysql_Blog_Collection:output_type -> BACK_blog
	12, // 45: Blogs.Delete_Mysql_Blog_Collection:output_type -> BACK_blog
	3,  // 46: Blogs.Get_Mysql_Blog_Collection:output_type -> Blog_Elastic_Message_Collection_blogs
	12, // 47: Blogs.Revise_Blog_Elastic_Mysql:output_type -> BACK_blog
	17, // 48: Blogs.Search_Blog_Label_Elastic:output_type -> Blog_Elastic_Message_Serach_blogs
	2,  // 49: Blogs.Get_Blog_Collection_Status:output_type -> Status
	1,  // 50: Blogs.Get_Blog_Manage_All:output_type -> Blog_Message
	12, // 51: Blogs.Delete_El6_Mysql_Process:output_type -> BACK_blog
	1,  // 52: Blogs.Get_Blog_Manage_Name:output_type -> Blog_Message
	1,  // 53: Blogs.Get_Blog_Manage_Title:output_type -> Blog_Message
	1,  // 54: Blogs.Get_Blog_Manage_Label:output_type -> Blog_Message
	29, // [29:55] is the sub-list for method output_type
	3,  // [3:29] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_blog_proto_init() }
func file_blog_proto_init() {
	if File_blog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blog_Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blog_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blog_Elastic_Message_CollectionBlogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUuid_Blog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Redis_Storage_Blog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AAAA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AAAAA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Redis_Back_Picture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogBlog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogProcessBlog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogProcessPlusBlog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BACKBlog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blog_ArticleUuid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blog_UserUuid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogloadingBlog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blog_Elastic_Message_TopBlogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blog_Elastic_Message_SerachBlogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blog_Elastic_Message_TopBlog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blog_proto_goTypes,
		DependencyIndexes: file_blog_proto_depIdxs,
		MessageInfos:      file_blog_proto_msgTypes,
	}.Build()
	File_blog_proto = out.File
	file_blog_proto_rawDesc = nil
	file_blog_proto_goTypes = nil
	file_blog_proto_depIdxs = nil
}
